function loadTokenShop(p: player):
	set {_uuid} to uuid of {_p}
	set {_comingSoon} to gray dye named "&cComing Soon" with lore "&7&oThis buff is not available right now!"
	loadGUI({_p}, "tokenShop", 6, "Token Shop")
	loop integers between 0 and 53:
		setGUISlot({_p}, "tokenShop", loop-integer, black stained glass pane named " ")
	setGUISlot({_p}, "tokenShop", 11, sunflower named "&6&lToken &e&lUpgrades" with lore "&7&oUpgrade your stats!")
	setGUISlot({_p}, "tokenShop", 15, nametag named "&b&lSuffixes" with lore "&7&oGreat for roleplaying!")

	# setGUISlot({_p}, "tokenShop", 19, tokenBuffIcon({_p}, "eggFinder")) # +% more eggs on click 1-10%
	# setGUISlot({_p}, "tokenShop", 20, tokenBuffIcon({_p}, "tokenator")) # +% chance to get tokens
	# setGUISlot({_p}, "tokenShop", 21, tokenBuffIcon({_p}, "multiplicative")) # more multiplier 0.25-2.5

	# setGUISlot({_p}, "tokenShop", 28, tokenBuffIcon({_p}, "discount")) # % discount on select shops
	# setGUISlot({_p}, "tokenShop", 29, tokenBuffIcon({_p}, "lucky")) # chance to get extra tokens and eggs on click
	# setGUISlot({_p}, "tokenShop", 30, barrel named "&eKey Finder" with lore "&7&oCrates are currently under development!")
	# #setGUISlot({_p}, "tokenShop", 30, tokenBuffIcon({_p}, "keyFinder")) # small chance to find crate keys on click

	# setGUISlot({_p}, "tokenShop", 37, beacon named "&eBenevolent Aura" with lore "&7&oThis buff is currently under development!")
	# #setGUISlot({_p}, "tokenShop", 37, tokenBuffIcon({_p}, "benevolentAura")) # players within 5 blocks (including player) get buffs

	setGUISlot({_p}, "tokenShop", 19, egg named "&eEgg Finder")
	setGUISlot({_p}, "tokenShop", 20, gold nugget named "&eTokenator")
	setGUISlot({_p}, "tokenShop", 21, nether star named "&eMultiplicative")
	setGUISlot({_p}, "tokenShop", 28, emerald named "&eDiscount")
	setGUISlot({_p}, "tokenShop", 29, big dripleaf named "&eLucky")
	setGUISlot({_p}, "tokenShop", 30, {_comingSoon})
	setGUISlot({_p}, "tokenShop", 37, {_comingSoon})
	setGUISlot({_p}, "tokenShop", 38, {_comingSoon})
	setGUISlot({_p}, "tokenShop", 39, {_comingSoon})

	setGUISlot({_p}, "tokenShop", 23, suffixIcon({_p}, "chicken"))
	setGUISlot({_p}, "tokenShop", 24, suffixIcon({_p}, "gamer"))
	setGUISlot({_p}, "tokenShop", 25, suffixIcon({_p}, "hacker"))
	setGUISlot({_p}, "tokenShop", 32, suffixIcon({_p}, "swedish"))
	setGUISlot({_p}, "tokenShop", 33, suffixIcon({_p}, "drip"))
	setGUISlot({_p}, "tokenShop", 34, suffixIcon({_p}, "pro"))
	setGUISlot({_p}, "tokenShop", 41, suffixIcon({_p}, "noob"))
	setGUISlot({_p}, "tokenShop", 42, suffixIcon({_p}, "nerd"))
	setGUISlot({_p}, "tokenShop", 43, suffixIcon({_p}, "fairy"))
	openGUI({_p}, "tokenShop")

# registerTokenBuff(id, cost, name, lore, icon)
function registerTokenBuff(id: text, cost: number, name: text, lore: text, icon: item, previous: text):
	set {tokenShop::buffs::%{_id}%::cost} to {_cost}

function tokenBuffIcon(p: player, buff: text) :: item:
	set {_uuid} to uuid of {_p}
	set {_icon} to {tokenShop::%{_buff}%::icon}
	set {_name} to {tokenShop::%{_buff}%::name}
	set {_lore} to {tokenShop::%{_buff}%::lore}
	if {player::%{_uuid}%::buffs::%{_buff}%} is true: 
		set {_item} to {_icon} named {_name} with lore "%{_lore}%" and "&a&lUNLOCKED"
		enchant {_item} with mending
		return 1 of ({_item} with hidden enchants flag)
	else:
		if {player::%{_uuid}%::tokens} >= {tokenShop::%{_buff}%::cost}:
			return 1 of {_icon} named {_name} with lore "%{_lore}%" and "&dCost &7- &5%{tokenShop::%{_buff}%::cost}% Tokens", and "&aClick to purchase!"

function suffixIcon(p: player, suffix: text) :: item:
	set {_uuid} to uuid of {_p}
	set {_name} to {suffixes::%{_suffix}%}
	if {player::%{_uuid}%::suffixes::%{_suffix}%} is true:
		if {player::%{_uuid}%::suffix} is {_suffix}:
			return 1 of paper named "%{_name}%&aSuffix" with lore "&eClick to deselect!"
		else:
			return 1 of paper named "%{_name}%&aSuffix" with lore "&eClick to select!"
	else:
		if {player::%{_uuid}%::tokens} >= 5000:
			return 1 of paper named "%{_name}%&eSuffix &8(&75000&8)" with lore "&eClick to purchase!"
		else:
			return 1 of paper named "%{_name}%&cSuffix &8(&75000&8)" with lore "&cNot enough tokens!"

function useSuffix(p: player, suffix: text):
	set {_uuid} to uuid of {_p}
	if {player::%{_uuid}%::suffixes::%{_suffix}%} is true:
		if {player::%{_uuid}%::suffix} is {_suffix}:
			set {player::%{_uuid}%::suffix} to "none"
			send message "&aYou cleared your current suffix!" to {_p}
			play sound "item.armor.equip_iron" to {_p}
		else:
			set {player::%{_uuid}%::suffix} to {_suffix}
			send "&aYou have selected the &e%{suffixes::%{_suffix}%}%&asuffix!" to {_p}
			play sound "item.armor.equip_iron" at pitch 0.75 to {_p}
		loadTokenShop({_p})
	else:
		if {player::%{_uuid}%::tokens} >= 5000:
			remove 5000 from {player::%{_uuid}%::tokens}
			set {player::%{_uuid}%::suffixes::%{_suffix}%} to true
			set {player::%{_uuid}%::suffix} to {_suffix}
			send "&aYou purchased the &e%{suffixes::%{_suffix}%}%&a suffix!" to {_p}
			play sound "entity.player.levelup" to {_p}
			loadTokenShop({_p})
		else:
			send "&cYou do not have enough tokens to purchase this suffix!" to {_p}
			play sound "entity.villager.no" to {_p}

on inventory click:
	if event-inventory = (metadata tag "tokenShop" of player):
		cancel event
		if event-slot is 23:
			useSuffix(event-player, "chicken")
		if event-slot is 24:
			useSuffix(event-player, "gamer")
		if event-slot is 25:
			useSuffix(event-player, "hacker")
		if event-slot is 32:
			useSuffix(event-player, "swedish")
		if event-slot is 33:
			useSuffix(event-player, "drip")
		if event-slot is 34:
			useSuffix(event-player, "pro")
		if event-slot is 41:
			useSuffix(event-player, "noob")
		if event-slot is 42:
			useSuffix(event-player, "nerd")
		if event-slot is 43:	
			useSuffix(event-player, "fairy")