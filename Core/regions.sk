command /fixregions:
	permission: op
	trigger:
		loop {rooms::*}:
			execute console command "/rg flag -w EggClicker %{rooms::%loop-value%::r}% entry allow"
			execute console command "/rg removemember -w EggClicker -a %{rooms::%loop-value%::r}%"
			send "&aFixed %{rooms::%loop-value%::r}%!"


on load:
	clear {rooms::*}
	room("spawn", "Spawn", "Clicker", egg)
	room("library", "Library", "Librarian", bookshelf)
	room("bedroom", "Bedroom", "Sleeper", red bed)
	room("kitchen", "Kitchen", "Chef", furnace)
	room("cellar", "Cellar", "Kidnapped Child", barrel)
	room("backyard", "Backyard", "Camper", campfire)
	room("mine", "Mine", "Miner", iron pickaxe)
	room("nether", "Nether", "Piglin", netherrack)
	room("stronghold", "Stronghold", "Silverfish", end portal frame)
	room("end", "End", "Enderman", endstone)
	room("eggstreet", "Egg Street", "Homeless", black concrete)
	room("mcdonalds", "EggDonalds", "Fat", cooked beef)
	room("hut", "Hut", "Grandma", fern)
	room("abandoned", "Abandoned House", "Ghost", web)
	room("skyscraper", "Skyscraper", "Entrepreneur", white stained glass)
	room("lushcave", "Lush Cave", "Lush", flowering azalea)
	room("jungletemple", "Jungle Temple", "Tomb Raider", mossy cobblestone)
	room("jungle", "Jungle", "Tarzan", jungle leaves)
	room("deserttemple", "Desert Temple", "TNT", orange terracotta)
	room("desert", "Desert", "Camel", sand)
	room("park", "Park", "Bird", poppy)
	room("beach", "Beach", "Lifeguard", yellow carpet)
	room("ship", "Ship", "Pirate", spyglass)
	room("lighthouse", "Lighthouse", "Lightkeeper", sea lantern)
	room("graveyard", "Graveyard", "Undead", skeleton skull)
	room("church", "Church", "Priest", lectern)
	room("prison", "Prison", "Thief", iron bars)
	room("prisonyard", "Prison Yard", "Robber", painting)
	# room("clickerstreet", "Clicker Street", "Professional Clicker", white concrete)
	# room("cinema", "Cinema", "Popcorn", red concrete)
	# room("factory", "Factory", "Worker", black wool)
	# room("bank", "Bank", "Rich", sunflower)
	
#room(name, clickregion, eggs per second)
function room(n: text, u: text, tag: text, it: itemtype):
	add {_n} to {rooms::*}
	set {_r} to "eggclicker_%{_n}%"
	set {rooms::%{_n}%::r} to {_r}
	set {rooms::%{_n}%::id} to size of {rooms::*}
	set {rooms::%{_n}%::epc} to clickmoney(size of {rooms::*})
	set {rooms::%{_n}%::c} to price(clickmoney(size of {rooms::*}))
	set {rooms::%{_n}%::it} to {_it}
	set {rooms::%{_n}%::u} to {_u}
	set {rooms::%{_n}%::tag} to {_tag}
    
	
	
on right-click:
	#add xp
	add 1 to {xp::%player's uuid%}
	
	#autobuy
	if {autobuy::%player's uuid%} is "&a&l&nUNLOCKED":
		loop {rooms::*}:
			if {rooms::%loop-value%::id} is last element of {ul::%player's uuid%::*} + 1:
				set {_r} to loop-value
		if {_r} is set:
			if {eggs::%player's uuid%} is greater than or equal to {rooms::%{_r}%::c}:
				set {_uuid} to player's uuid
				add {rooms::%{_r}%::id} to {ul::%{_uuid}%::*}
				remove {rooms::%{_r}%::c} from {eggs::%{_uuid}%}
				set {tag::%{_uuid}%} to {rooms::%{_r}%::tag}
				play sound "entity.player.levelup" to player
				set {_a} to false
					
				loop {rooms::*}:
					if {rooms::%loop-value%::id} is {rooms::%{_r}%::id} + 1:
						set {_nc} to {rooms::%loop-value%::c}
				if {_nc} is set:
					set {nextarea::%{_uuid}%} to {_nc}
					send "&e&lAUTOBUY &8| &bYou successfully unlocked &9%{rooms::%{_r}%::u}%&b! Next room costs &9%getNumberFormatted({_nc})%&b." to player
				else:
					set {nextarea::%{_uuid}%} to price(clickmoney(size of {rooms::*} + 1)) * {multiplier::%{_uuid}%}
					send "&e&lAUTOBUY &8| &bYou successfully unlocked &9%{rooms::%{_r}%::u}%&b! Now prestige using &9/prestige&b." to player
	
	#autoprestige
	if {autoprestige::%player's uuid%} is "&a&l&nUNLOCKED":
		set {_cost} to price(clickmoney(size of {rooms::*} + 1)) * {multiplier::%player's uuid%}			
		if {eggs::%player's uuid%} is more than or equal to {_cost}:
			if size of {ul::%player's uuid%::*} is greater than or equal to size of {rooms::*}:
				make player say "/prestige"
	
	#levels
	if {xp::%player's uuid%} is more than or equal to {neededxp::%player's uuid%}:
		add 1 to {level::%player's uuid%}
		set {xp::%player's uuid%} to 0
		set {neededxp::%player's uuid%} to round({neededxp::%player's uuid%} * 1.25)
		play sound "minecraft:entity.player.levelup" to player
		if mod({level::%player's uuid%}, 20) is 0:
			send title "&e&lLEVEL UP" with subtitle "&f+1 &5Epic Crate Key" to player
			add 1 to {keys::epic::%player's uuid%}
		else if mod({level::%player's uuid%}, 5) is 0:
			send title "&e&lLEVEL UP" with subtitle "&f+1 &bRare Crate Key" to player
			add 1 to {keys::rare::%player's uuid%}
		else:
			send title "&e&lLEVEL UP" with subtitle "&f+1 &fCommon Crate Key" to player
			add 1 to {keys::common::%player's uuid%}
	set level progress of player to {xp::%player's uuid%} / {neededxp::%player's uuid%}
	set level of player to {level::%player's uuid%}
	
	#eggs
	loop {rooms::*}:
		if region at player is {rooms::%loop-value%::r} parsed as region:
			if {ul::%player's uuid%::*} contains {rooms::%loop-value%::id}:
				#doubleeggs
				set {_de} to false
				chance of {doubleegg::%player's uuid%}%:
					set {_de} to true
				#eggs
				if {_de} is false:
					add round({rooms::%loop-value%::epc} * {multiplier::%player's uuid%}) to {eggs::%player's uuid%}
				else:
					add round(({rooms::%loop-value%::epc} * {multiplier::%player's uuid%}) * 2) to {eggs::%player's uuid%}
				#tokens
				chance of 1%:
					add 1 to {tokens::%player's uuid%}
					play sound "block.amethyst_block.hit" to player
				if {tokens::%player's uuid%} is greater than 100000:
					unlockAchievement("tokenator", player)
				#clicks
				add 1 to {clicks::%player's uuid%}
				add 1 to {clicks}
				if {clicks::%player's uuid%} is greater than or equal to 250000:
					unlockAchievement("masterClicker", player)
				#actionbar
				if {_de} is false:
					send action bar "&e+%getNumberFormatted(round({rooms::%loop-value%::epc} * {multiplier::%player's uuid%}))% Eggs &8(&f%getNumberFormatted({eggs::%player's uuid%})%&8)" to player
				else if {_de} is true:
					send action bar "&6&lGOLDEN EGG &7- &e+%getNumberFormatted(round(({rooms::%loop-value%::epc} * {multiplier::%player's uuid%}) * 2))% Eggs &8(&f%getNumberFormatted({eggs::%player's uuid%})%&8)" to player
		

on region enter:
	if {bypassroomentry::%player's uuid%} is not true:
		loop {rooms::*}:
			if {rooms::%loop-value%::r} parsed as region is event-region:
				if {ul::%player's uuid%::*} does not contain {rooms::%loop-value%::id}:
					if loop-value is "end":
						if {ul::%player's uuid%::*} does not contain {rooms::end::id}:
							teleportPlayer(player, 40.5, 54.5, 327.5, 0, -90, "EggClicker")
							send action bar "&cYou have not unlocked this room, do &4/shop&c!" to player
							stop
					cancel event
					send action bar "&cYou have not unlocked this room, do &4/shop&c!" to player

			
function price(n: number) :: number:
	set {_a} to {_n}
	set {_b} to {_n}
	set {_c} to {_n}
	set {_e} to {_n}
	set {_d} to 0
	set {_check} to true

	set {_l} to (length of "%{_a}%") - 1 #2

	loop {_l} times:
		set {_a} to {_a} / 10 #a = 5

	if {_a} is 5:
		set {_e} to {_n} / 2.5 #e = 200
	else:
		set {_e} to {_n} / 2 #e = 0,5

	while {_check} is true:
		set {_l} to (length of "%{_c}%") - 1 #2
		if {_l} is 0:
			set {_l} to 1
		loop {_l} times: #1:c = 500
			if {_c} is 1:
				set {_check} to false
			else:
				set {_f} to {_c} #1:f = 500
				if {_c} is more than 5:
					set {_b} to {_c} / 10 #1:b = 50
				else: 
					set {_b} to {_c}

				if "%{_b}%" contains "5":
					set {_c} to {_c} / 2.5 #c = 200
				else:
					set {_c} to {_f} / 2  #c = 500
				add 1 to {_d}
				
	return (({_e} * 250 + {_e} * {_d} * 50) * 1.5) 
			
function clickmoney(n: number) :: number:
	set {_a} to {_n}
	while {_a} > 3:
		remove 3 from {_a} 
	if {_a} is 3: 
		return 5 * ((10 ^ round(({_n} / 3))) / 10)
	else if {_a} is 2:
		return 2 * ((10 ^ round(({_n} / 3))) / 10)
	else: 
		return 1 * (10 ^ round(({_n} / 3))) 

command /toggleroombypass:
	permission: regions.bypassborder
	permission message: &cYou do not have permission to use this command!
	trigger:
		if {bypassroomentry::%player's uuid%} is true:
			set {bypassroomentry::%player's uuid%} to false
			send "&cYou are no longer bypassing room entry!" to player
		else:
			set {bypassroomentry::%player's uuid%} to true
			send "&aYou are now bypassing room entry!" to player