#function suffixCost(p: player, n: number) :: number:
#	set {_s} to {_n} * 2 * 3 / 2.5 * 11 / 2
#	set {_b} to {_s} * {_n} / 1.3
#	return round({_b})
#function buySuffix(p: player):
function buySuffix(p: player, cost: number, suf: text):
	set {_uuid} to {_p}'s uuid
	if {tokens::%{_uuid}%} is more than or equal to {_cost}:
		remove {_cost} from {tokens::%{_uuid}%}
		set {suffix::%{_uuid}%} to {_suf}
		add {_suf} to {suffixes::%{_uuid}%::*}
		play sound "block.note_block.pling" to {_p}
		send title "&a&l&nSuffix Purchased" to {_p}
		tokenShop({_p})
	else:
		send "&cNot enough tokens! &8(%{tokens::%{_uuid}%}%&8/%{_cost}%&8)" to {_p}
		
function equipSuffix(p: player, suf: text):
	set {_uuid} to {_p}'s uuid
	set {suffix::%{_uuid}%} to {_suf}
	play sound "block.note_block.pling" to {_p}
	send title "&a&l&nSuffix Equipped" to {_p}
	tokenShop({_p})
		
		
#command sufco <number>:
#	permission: op
#	trigger:
#		send "%suffixCost(player, arg-1)%"
function shop(p: player):
	create a gui with virtual chest inventory with 3 rows named "Shop" and shape "xyxyxyxyx", "yxrxtxsxy", and "xyxyxyxyx":
		format gui slot "x" with red stained glass pane named " "
		format gui slot "y" with white stained glass pane named " "
		format gui slot "r" with egg named "&6&lRoom Shop" with lore "&7Buy rooms here!":
			roomShop({_p})
		format gui slot "t" with sunflower named "&e&lToken Shop" with lore "&7Spend tokens here!":
			tokenShop({_p})
		format gui slot "s" with emerald named "&a&lServer Store" with lore "&7Support the server!":
			close {_p}'s inventory
			make {_p} say "/buy"
	open the last gui for {_p}
		
function tokenShop(p: player):
	create a gui with virtual chest inventory with 3 rows named "Shop" and shape "xyxyxyxyx", "yabcdefgy", and "xyxyxyxyx":
		format gui slot "x" with red stained glass pane named " "
		format gui slot "y" with white stained glass pane named " "
		
		if {suffix::%{_p}'s uuid%} is "&cChicken":
			format gui slot "a" with chicken spawn egg named "&c&nChicken Tag" with lore "&7Cost: &e⛁10" and "&aEquipped"
		else if {suffixes::%{_p}'s uuid%::*} contains "&cChicken":
			format gui slot "a" with chicken spawn egg named "&c&nChicken Tag" with lore "&7Cost: &e⛁10" and "&aBought - Click to equip":
				equipSuffix(player, "&cChicken")
		else:
			format gui slot "a" with chicken spawn egg named "&c&nChicken Tag" with lore "&7Cost: &e⛁10" and "&aClick to buy":
				buySuffix(player, 10, "&cChicken")
		
		
		if {suffix::%{_p}'s uuid%} is "&eGamer":
			format gui slot "b" with blaze spawn egg named "&e&nGamer Tag" with lore "&7Cost: &e⛁20" and "&aEquipped"
		else if {suffixes::%{_p}'s uuid%::*} contains "&eGamer":
			format gui slot "b" with blaze spawn egg named "&e&nGamer Tag" with lore "&7Cost: &e⛁20" and "&aBought - Click to equip":
				equipSuffix(player, "&eGamer")
		else:
			format gui slot "b" with blaze spawn egg named "&e&nGamer Tag" with lore "&7Cost: &e⛁20" and "&aClick to buy":
				buySuffix(player, 20, "&eGamer")
				
				
		if {suffix::%{_p}'s uuid%} is "&bPro":
			format gui slot "c" with drowned spawn egg named "&b&nPro Tag" with lore "&7Cost: &e⛁40" and "&aEquipped"
		else if {suffixes::%{_p}'s uuid%::*} contains "&bPro":
			format gui slot "c" with drowned spawn egg named "&b&nPro Tag" with lore "&7Cost: &e⛁40" and "&aBought - Click to equip":
				equipSuffix(player, "&bPro")
		else:
			format gui slot "c" with drowned spawn egg named "&b&nPro Tag" with lore "&7Cost: &e⛁40" and "&aClick to buy":
				buySuffix(player, 40, "&bPro")
		
	
		if {suffix::%{_p}'s uuid%} is "&dLirre":
			format gui slot "d" with shulker spawn egg named "&d&nLirre Tag" with lore "&7Cost: &e⛁65" and "&aEquipped"
		else if {suffixes::%{_p}'s uuid%::*} contains "&dChicken":
			format gui slot "d" with shulker spawn egg named "&d&nLirre Tag" with lore "&7Cost: &e⛁65" and "&aBought - Click to equip":
				equipSuffix(player, "&dLirre")
		else:
			format gui slot "d" with shulker spawn egg named "&d&nLirre Tag" with lore "&7Cost: &e⛁65" and "&aClick to buy":
				buySuffix(player, 65, "&dLirre")	
		
			
		if {suffix::%{_p}'s uuid%} is "&aMock":
			format gui slot "e" with creeper spawn egg named "&a&nMock Tag" with lore "&7Cost: &e⛁85" and "&aEquipped"
		else if {suffixes::%{_p}'s uuid%::*} contains "&aMock":
			format gui slot "e" with creeper spawn egg named "&a&nMock Tag" with lore "&7Cost: &e⛁85" and "&aBought - Click to equip":
				equipSuffix(player, "&aMock")
		else:
			format gui slot "e" with creeper spawn egg named "&a&nMock Tag" with lore "&7Cost: &e⛁85" and "&aClick to buy":
				buySuffix(player, 85, "&aMock")
			

		if {suffix::%{_p}'s uuid%} is "&5&lNerd":
			format gui slot "f" with strider spawn egg named "&5&l&nNerd Tag" with lore "&7Cost: &e⛁100" and "&aEquipped"
		else if {suffixes::%{_p}'s uuid%::*} contains "&5&lNerd":
			format gui slot "f" with strider spawn egg named "&5&l&nNerd Tag" with lore "&7Cost: &e⛁100" and "&aBought - Click to equip":
				equipSuffix(player, "&5&lNerd")
		else:
			format gui slot "f" with strider spawn egg named "&5&l&nNerd Tag" with lore "&7Cost: &e⛁100" and "&aClick to buy":
				buySuffix(player, 100, "&5&lNerd")	
		
		
		if {suffix::%{_p}'s uuid%} is "&e&l&nEGG":
			format gui slot "g" with glowing egg named "&e&l&nEGG Tag" with lore "&7Cost: &e⛁400" and "&aEquipped"
		else if {suffixes::%{_p}'s uuid%::*} contains "&e&l&nEGG":
			format gui slot "g" with glowing egg named "&e&l&nEGG Tag" with lore "&7Cost: &e⛁400" and "&aBought - Click to equip":
				equipSuffix(player, "&e&l&nEGG")
		else:
			format gui slot "g" with glowing egg named "&e&l&nEGG Tag" with lore "&7Cost: &e⛁400" and "&aClick to buy":
				buySuffix(player, 400, "&e&l&nEGG")
			
	open the last gui for {_p}
		
function roomShop(p: player):
	create a gui with virtual chest inventory with 6 rows named "Room Shop": 
		format gui slot 0,2,4,6,8,18,26,36,44,46,48,50, and 52 with red stained glass pane named " "
		format gui slot 1,3,5,7,9,17,27,35,45,47,49,51, and 53 with white stained glass pane named " "
		set {_c} to 9
		set {_nv::*} to 0,2,4,6,8,18,26,36,44,46,48,50,51,3,5,7,9,17,27,35,47,49,51, and 53
		loop {rooms::*}:
			if {_nv::*} contains {rooms::%loop-value%::id} + {_c}:
				add 1 to {_c}
				if {_nv::*} contains {rooms::%loop-value%::id} + {_c}:
					add 1 to {_c}
			set {_uuid} to uuid of {_p}	
			set {_price} to {rooms::%loop-value%::price}
			if {rooms::%loop-value%::id} is 1:
				format gui slot {rooms::%loop-value%::id} + {_c} with {rooms::%loop-value%::it} named "&b%{rooms::%loop-value%::u}%" with lore "&dEggs Per Click &7- &5%getNumberFormatted({rooms::%loop-value%::epc})%" and "&a&lUNLOCKED"
			else if {ul::%{_uuid}%::*} contains {rooms::%loop-value%::id} - 1:
				if {ul::%{_uuid}%::*} contains {rooms::%loop-value%::id}:
					format gui slot {rooms::%loop-value%::id} + {_c} with {rooms::%loop-value%::it} named "&b%{rooms::%loop-value%::u}%" with lore "&dEggs Per Click &7- &5%getNumberFormatted({rooms::%loop-value%::epc})%" and "&a&lUNLOCKED"
				else:
					set {_lv} to loop-value
					format gui slot {rooms::%loop-value%::id} + {_c} with {rooms::%loop-value%::it} named "&b%{rooms::%loop-value%::u}%" with lore "&dEggs Per Click &7- &5%getNumberFormatted({rooms::%{_lv}%::epc})%" and "&dCost &7- &5%getNumberFormatted({rooms::%loop-value%::c})% Eggs" and "&aClick to buy!":
						if {eggs::%{_uuid}%} is greater than or equal to {rooms::%{_lv}%::c}:
							add {rooms::%{_lv}%::id} to {ul::%{_uuid}%::*}
							remove {rooms::%{_lv}%::c} from {eggs::%{_uuid}%}
							set {tag::%{_uuid}%} to {rooms::%{_lv}%::tag}
							play sound "entity.player.levelup" to {_p}
							loop {rooms::*}:
								if {rooms::%loop-value%::id} is {rooms::%{_lv}%::id} + 1:
									set {_nc} to {rooms::%loop-value%::c}
							if {_nc} is set:
								send "&bYou successfully unlocked &9%{rooms::%{_lv}%::u}%&b! Next room costs &9%getNumberFormatted({_nc})%&b." to {_p}
							else:
								send "&bYou successfully unlocked &9%{rooms::%{_lv}%::u}%&b! Now prestige using &9/prestige&b." to {_p}
							roomShop({_p})
						else:
							send "&cYou do not have enough eggs to purchase this room!" to {_p}
							play sound "entity.villager.no" to {_p}
			else:
				loop {rooms::*}:
					if {rooms::%loop-value-2%::id} is {rooms::%loop-value-1%::id} - 1:
						format gui slot {rooms::%loop-value-1%::id} + {_c} with {rooms::%loop-value-1%::it} named "&b%{rooms::%loop-value-1%::u}%" with lore "&dEggs Per Click &7- &5%getNumberFormatted({rooms::%loop-value-1%::epc})%" and "&7Requires &e%{rooms::%loop-value-2%::u}% &7to purchase!"
				
			
	open the last gui for {_p}
		
on join:
	if {ul::%player's uuid%::*} is not set:
		add 1 to {ul::%player's uuid%::*}
		

		
command /shop:
	trigger:
		shop(player)
		
		
on offhand switch:
	cancel event
	shop(player)
		